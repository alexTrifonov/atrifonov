url=jdbc:postgresql://localhost:5432/first_base
user=postgres
password=password
createTableRoleFan = CREATE TABLE IF NOT EXISTS role_fan (id SERIAL PRIMARY KEY,\
  role_name VARCHAR (100),\
  edit_user boolean,\
  edit_role boolean)

insertRole = INSERT INTO role_fan (role_name, edit_user, edit_role) SELECT ?, ?, ? \
  WHERE NOT EXISTS (SELECT 1 FROM role_fan WHERE role_name = ?) RETURNING id
updateRole = UPDATE role_fan set role_name = ?, edit_user = ?, edit_role = ? WHERE id = ? AND \
  NOT EXISTS (SELECT 1 FROM role_fan WHERE role_name = ?)
updateRoleSimp = UPDATE role_fan set edit_user = ?, edit_role = ? WHERE id = ?
deleteRole = DELETE FROM role_fan WHERE id = ?
getRoleById = SELECT role_name, edit_user, edit_role FROM role_fan WHERE id = ?
getRoleByName = SELECT id, edit_user, edit_role FROM role_fan WHERE role_name = ?
getAllRoles = SELECT * FROM role_fan ORDER BY role_name

createTableAddress = CREATE TABLE IF NOT EXISTS address_store (id SERIAL PRIMARY KEY,\
  country VARCHAR (100),\
  city VARCHAR (100),\
  street VARCHAR (100),\
  house_number INTEGER,\
  flat_number INTEGER)
insertAddress = INSERT INTO address_store (country, city, street, house_number, flat_number) SELECT ?, ?, ?, ?, ? \
  WHERE NOT EXISTS (SELECT 1 FROM address_store WHERE country = ? AND city = ? AND street = ? AND house_number = ? AND flat_number = ?) RETURNING id
updateAddress = UPDATE address_store set country = ?, city = ?, street = ?, house_number = ?, flat_number = ? WHERE id = ? AND \
  NOT EXISTS (SELECT 1 FROM address_store WHERE country = ? AND city = ? AND street = ? AND house_number = ? AND flat_number = ?)
deleteAddress = DELETE FROM address_store WHERE id = ?
getAddressById = SELECT country, city, street, house_number, flat_number FROM address_store WHERE id = ?
getAllAddresses = SELECT * FROM address_store ORDER BY city

createTableMusicType = CREATE TABLE IF NOT EXISTS music_type (id SERIAL PRIMARY KEY,\
  type VARCHAR (100))
insertMusicType = INSERT INTO music_type (type) SELECT ? WHERE NOT EXISTS (SELECT 1 FROM music_type WHERE type = ?) RETURNING id
updateMusicType = UPDATE music_type set type = ? WHERE id = ? AND NOT EXISTS (SELECT 1 FROM music_type WHERE type = ?)
deleteMusicType = DELETE FROM music_type WHERE id = ?
getMusicTypeById = SELECT type FROM music_type WHERE id = ?
getMusicTypeByType = SELECT * FROM music_type WHERE type = ?
getAllMusicType = SELECT * FROM music_type

createTableFan = CREATE TABLE IF NOT EXISTS users_fan (id SERIAL PRIMARY KEY,\
  fan_name VARCHAR (100),\
  user_login VARCHAR (100),\
  id_role INTEGER REFERENCES role_fan (id),\
  id_address INTEGER REFERENCES address_store (id),\
  password VARCHAR (100))
insertUser = INSERT INTO users_fan (fan_name, user_login, id_role, id_address, password) SELECT ?, ?, ?, ?, ? \
  WHERE NOT EXISTS (SELECT 1 FROM users_fan WHERE user_login = ? OR id_address = ?) RETURNING id
updateUser = UPDATE users_fan set fan_name = ?, user_login = ?, id_role = ?, id_address = ?, password = ? WHERE id = ? AND \
  NOT EXISTS (SELECT 1 FROM users_fan WHERE user_login = ? OR id_address = ?)
updateUserSimp = UPDATE users_fan set fan_name = ?, id_role = ?, password = ? WHERE id = ?
updateUserByLog = UPDATE users_fan set fan_name = ?, id_role = ?, id_address = ?, password = ? WHERE id = ? AND \
  NOT EXISTS (SELECT 1 FROM users_fan WHERE id_address = ?)
updateUserByAddr = UPDATE users_fan set fan_name = ?, user_login = ?, id_role = ?, password = ? WHERE id = ? AND \
  NOT EXISTS (SELECT 1 FROM users_fan WHERE user_login = ?)
deleteUser = DELETE FROM users_fan WHERE id = ?
getUserById = SELECT fan_name, user_login, id_role, id_address, password FROM users_fan WHERE id = ?
getUserByAddress = SELECT id, fan_name, user_login, id_role, password FROM users_fan WHERE id_address = ?
getUserByRole = SELECT id, fan_name, user_login, id_address, password FROM users_fan WHERE id_role = ?
getAllUsers = SELECT * FROM users_fan ORDER BY fan_name
getAllNoAdminNoModerator = SELECT * FROM users_fan WHERE id_role != ? AND id_role != ? ORDER BY fan_name
checkLoginPassword = SELECT * FROM users_fan WHERE user_login = ? AND password = ?

createTableUserMusics = CREATE TABLE IF NOT EXISTS user_musics (id SERIAL PRIMARY KEY,\
  id_user INTEGER REFERENCES users_fan (id),\
  id_music_type INTEGER REFERENCES music_type (id))
createUserMusic = INSERT INTO user_musics (id_user, id_music_type) SELECT ?, ? \
  WHERE NOT EXISTS (SELECT 1 FROM user_musics WHERE id_user = ? AND  id_music_type = ?)
deleteUserMusic = DELETE FROM user_musics WHERE id_user = ? AND id_music_type = ?
deleteAllUserMusic = DELETE FROM user_musics WHERE id_user = ?
getUserIdByMusic = SELECT id_user FROM user_musics WHERE id_music_type = ?
getAllIdMusicUser = SELECT id_music_type FROM user_musics WHERE id_user = ?

